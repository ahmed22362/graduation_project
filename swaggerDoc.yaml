openapi: "3.0.0"
info:
  title: "Your API Title"
  description: "Your API Description"
  version: "1.0.0"
servers:
  - url: https://graduation-project-nrnm.onrender.com/api/v1
    description: Production server (uses live data)
  - url: 127.0.0.1:30/api/v1
    description: local server (uses test data)

consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /signup:
    post:
      summary: Signup a new user
      tags: [Users]
      consumes:
        - multipart/form-data
      parameters:
        - in: formData
          name: profilePhoto
          type: file
          description: User profile photo
        - in: formData
          name: name
          type: string
          required: true
          description: User name
        - in: formData
          name: email
          type: string
          required: true
          description: User email
        - in: formData
          name: password
          type: string
          required: true
          description: User password
        - in: formData
          name: passwordConfirm
          type: string
          required: true
          description: Confirm user password
      responses:
        "201":
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                  data:
                    type: array
                    properties:
                      user:
                        type: object
                        properties:
                          name:
                            type: string
                            example: John Doe
                          email:
                            type: string
                            example: johndoe@example.com
                          role:
                            type: string
                            example: user
                          photo:
                            type: string
                            example: https://res.cloudinary.com/demo/image/upload/v1234567890/sample.jpg
        "400":
          description: Invalid request body or missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: Invalid request body or missing required fields
        "409":
          description: Email already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: Email already exists

  /login:
    post:
      summary: Login a user
      tags: [Users]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: johndoe@example.com
              password:
                type: string
                example: password123
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
                  data:
                    type: Array
                    example:

        "401":
          description: Incorrect email or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: Incorrect email or password

  /forgetPassword:
    post:
      summary: Send reset password token to user email
      tags: [Users]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                example: johndoe@example.com
      responses:
        "200":
          description: Reset password token sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Reset password token sent to email
        "404":
          description: There is no user with this email address
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: There is no user with this email address
        "500":
          description: There wat an error during sending the email. Try again later
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: There wat an error during sending the email. Try again later
  /resetPassword:
    patch:
      summary: Change the current user password
      tags: [Users]
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              passwordResetCode:
                type: string
                example: "123456"
              password:
                type: string
                example: password
              passwordConfirm:
                type: string
                example: password
      responses:
        "200":
          description: password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string

                      

        "400":
          description: code is invalid or has expire
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: fail
                  message:
                    type: string
                    example: code is invalid or has expire
definitions:
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      phone:
        type: "integer"
      email:
        type: "string"
      password:
        type: "string"
      passwordConfirm:
        type: "string"
      imageURL:
        type: "string"
  Car:
    type: "object"
    properties:
      plateNum:
        type: "string"
      color:
        type: "string"
